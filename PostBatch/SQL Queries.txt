11-Dec-2023:
============
SQL:
====
1. Normalization
	1NF, 2NF, 3NF
	Explain the rules of these 3 NFs.
	
1NF: A cell (column value) in a table must not have multiple values.
For e.g.; Phone number.

	
2. Query to delete duplicate records.
	For e.g.; students table.
	there may be duplicate records for students.
	Id	FName	LName	City	Email
	101	John	Smith	Reston	jsmith@gmail.com
	101	John	Smith	Reston	jsmith@gmail.com
	101	John	Smith	Reston	jsmith@gmail.com
	
	1. Using regular query
	2. Using RANK() function.
	
	
SELECT [FirstName], 
    [LastName], 
    [Country], 
    COUNT(*) AS CNT
FROM [SampleDB].[dbo].[Employee]
GROUP BY [FirstName], 
      [LastName], 
      [Country]
HAVING COUNT(*) > 1;


SELECT *
    FROM [SampleDB].[dbo].[Employee]
    WHERE ID NOT IN
    (
        SELECT MAX(ID)
        FROM [SampleDB].[dbo].[Employee]
        GROUP BY [FirstName], 
                 [LastName], 
                 [Country]
    );


DELETE FROM [SampleDB].[dbo].[Employee]
    WHERE ID NOT IN
    (
        SELECT MAX(ID) AS MaxRecordID
        FROM [SampleDB].[dbo].[Employee]
        GROUP BY [FirstName], 
                 [LastName], 
                 [Country]
    );

# RANK() functions:
	RANK()
	DENSE_RANK()
	ROW_NUMBER()
	
# CTE = Common Table Expression.
WITH CTE_DeleteRecords([firstname], 
    [lastname], 
    [country], 
    duplicatecount)
AS (SELECT [firstname], 
           [lastname], 
           [country], 
           RANK() OVER(PARTITION BY [firstname], 
                                          [lastname], 
                                          [country]
           ORDER BY id) AS DuplicateCount
    FROM [SampleDB].[dbo].[employee])
SELECT *
FROM CTE_DeleteRecords;

WITH CTE_DeleteRecords(Id, [FirstName], 
    [LastName], 
    [Country], 
    DuplicateCount)
AS (SELECT Id, [FirstName], 
           [LastName], 
           [Country], 
           RANK() OVER(PARTITION BY [FirstName], 
                                          [LastName], 
                                          [Country]
           ORDER BY ID) AS DuplicateCount
    FROM [SampleDB].[dbo].[Employee])
DELETE FROM Employee USING Employee
JOIN CTE_DeleteRecords ON CTE_DeleteRecords.ID = Employees.Id
WHERE DuplicateCount > 1;

USE Employees;

WITH cte_rank_salary
AS (
	SELECT 
		e.emp_no, e.First_name, e.Last_name
		, t.title
		, s.salary
		, de.dept_no
		, d.dept_name
		, DENSE_RANK() OVER (ORDER BY s.salary DESC) SalaryDenseRank
		, RANK() OVER (ORDER BY s.salary DESC) SalaryRank
	FROM Employees e
	INNER JOIN titles t ON e.emp_no = t.emp_no
	INNER JOIN salaries s ON e.emp_no = s.emp_no
	INNER JOIN dept_emp de ON e.emp_no = de.emp_no
	INNER JOIN departments d ON de.dept_no = d.dept_no
	WHERE 1=1 
	AND de.to_date = '9999-01-01'
	AND t.to_date = '9999-01-01'
	AND s.to_date = '9999-01-01'
)
SELECT * FROM cte_rank_salary
WHERE SalaryDenseRank <= 5

12-Dec-2023:
============
C#:
===
1. Research on what these are?
2. How they work?
3. Demo code.

Extension Methods:
------------------
Create a couple of different extension methods for demo.

EF Core with Stored Procedures:
-------------------------------
At least 2 SPs and use them from EF Core (C# code).
